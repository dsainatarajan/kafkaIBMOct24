# Stop all producers and consumers with Ctrl+C
# Launch a new command prompt
Start -> cmd -> Enter
docker exec -it mvn bash
cd /code/kafkacode
unzip 7springkafkademo_upgraded.zip
cd 7springkafkademo_upgraded/springkafkaproducerdemo

apt update && apt install openjdk-17-jdk -y
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin/:$PATH
java -version
# Java version should be listed as 17

mvn package
ls target
# build the spring consumer jar
cd /code/kafkacode
cd 7springkafkademo_upgraded/springdemoconsumer

mvn package
ls target

# Launch a new terminal to copy the jars built to kafka1
Start -> cmd
docker start mvn
cd Documents
# copy the jars from mvn container to kafka1 container
docker cp mvn:/code/kafkacode/7springkafkademo_upgraded/springkafkaproducerdemo/target/springkafkademo-0.0.1-SNAPSHOT.jar  .
docker cp springkafkademo-0.0.1-SNAPSHOT.jar  multinodekafka-kafka1-1:/springproducer.jar

docker cp mvn:/code/kafkacode/7springkafkademo_upgraded/springdemoconsumer/target/springkafkademoconsumer-0.0.1-SNAPSHOT.jar  .
docker cp springkafkademoconsumer-0.0.1-SNAPSHOT.jar multinodekafka-kafka1-1:/spring-consumer.jar

docker exec -it multinodekafka-kafka1-1 bash
kafka-topics.sh --create --bootstrap-server kafka1:9092 --replication-factor 2 --partitions 3 --topic test

# --add-opens java.base/java.lang=ALL-UNNAMED arg added to fix reflection issues in Java
# start the Springboot consumer
java --add-opens java.base/java.lang=ALL-UNNAMED -jar -D spring-consumer.jar

# launch a new terminal
# Start the producer jar
docker exec -it multinodekafka-kafka1-1 bash
ls /
java -jar --add-opens java.base/java.lang=ALL-UNNAMED -jar -D springproducer.jar


# launch a new terminal
# producer more records by calling the API & verify if the new messages are received by the spring consumer
docker exec -it multinodekafka-kafka1-1 bash
curl localhost:8080/kafka/producer?message=springdemo
curl localhost:8080/kafka/producer?message=HelloKafka
curl localhost:8080/kafka/producer?message=HelloIBM

# observer all the messages will be received on the spring consumer
